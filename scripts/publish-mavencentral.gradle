apply plugin: "maven-publish"
apply plugin: "signing"

task androidSourcesJar(type: Jar) {
  archiveClassifier.set("sources")
  if (project.plugins.findPlugin("com.android.library")) {
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
  } else {
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
  }
}

artifacts {
  archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

ext["signing.keyId"] = ""
ext["signing.password"] = ""
ext["signing.secretKeyRingFile"] = ""
ext["ossrhUsername"] = ""
ext["ossrhPassword"] = ""
ext["sonatypeStagingProfileId"] = ""

File secretPropsFile = project.rootProject.file("local.properties")
if (secretPropsFile.exists()) {
  Properties p = new Properties()
  p.load(new FileInputStream(secretPropsFile))
  p.each { name, value ->
    ext[name] = value
  }
} else {
  ext["signing.keyId"] = System.getenv("SIGNING_KEY_ID")
  ext["signing.password"] = System.getenv("SIGNING_PASSWORD")
  ext["signing.secretKeyRingFile"] = System.getenv("SIGNING_SECRET_KEY_RING_FILE")
  ext["ossrhUsername"] = System.getenv("OSSRH_USERNAME")
  ext["ossrhPassword"] = System.getenv("OSSRH_PASSWORD")
  ext["sonatypeStagingProfileId"] = System.getenv("SONATYPE_STAGING_PROFILE_ID")
}

afterEvaluate {
  publishing {
    publications {
      release(MavenPublication) {
        groupId PUBLISH_GROUP_ID
        artifactId PUBLISH_ARTIFACT_ID
        version PUBLISH_VERSION
        if (project.plugins.findPlugin("com.android.library")) {
          from components.release
        } else {
          artifact("$buildDir/libs/${project.getName()}-${version}.jar")
        }

        artifact androidSourcesJar

        pom {
          name = PUBLISH_ARTIFACT_ID
          description = "Color picker library for Android"
          url = "https://github.com/side-codes/andColorPicker"
          licenses {
            license {
              name = "The Apache License, Version 2.0"
              url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
          }
          developers {
            developer {
              id = "dummyco"
              name = "Illia Achour"
              email = "ilyaachour@gmail.com"
            }
            developer {
              id = "N7k"
              name = "Maksim Novik"
              email = "nvk.mse@gmail.com"
            }
          }
          scm {
            connection = "scm:git:github.com/side-codes/andColorPicker.git"
            developerConnection = "scm:git:ssh://github.com/side-codes/andColorPicker.git"
            url = "https://github.com/side-codes/andColorPicker/tree/master"
          }
        }
      }
    }
    repositories {
      maven {
        name = "sonatype"

        def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
        url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

        credentials {
          username ossrhUsername
          password ossrhPassword
        }
      }
    }
  }
}

signing {
  sign publishing.publications
}
